{"ast":null,"code":"import { getLS, setLS, limpiarLs } from './localstorage';\nimport { cargando, cerrarAlert, ocultableDanger } from \"./swalService\";\nimport API from '../api/axios';\nimport i18next from \"i18next\";\nexport const attemp = (username, password) => {\n  cargando();\n  return API.post('iniciarSesion', {\n    username,\n    password\n  }).then(res => {\n    cerrarAlert();\n    return res.data;\n  }).catch(err => {\n    cerrarAlert();\n\n    switch (err.response.status) {\n      case 401:\n        ocultableDanger(i18next.t('navbar:sinUsuarioAsignado'), i18next.t('navbar:errorAuth'));\n        break;\n\n      case 403:\n        ocultableDanger(i18next.t('navbar:credencialesIncorrectas'), i18next.t('navbar:errorAuth'));\n        break;\n\n      case 500:\n      default:\n        ocultableDanger(i18next.t('navbar:errorDesconocido'), i18next.t('navbar:errorAuth'));\n        break;\n    }\n\n    return err.response;\n  });\n};\nexport const loginTrabajador = (username, trabajador_id, password2) => {\n  cargando();\n  return API.post('logInTrabajador', {\n    username,\n    trabajador_id,\n    password2\n  }).then(res => {\n    cerrarAlert();\n    return res.data;\n  }).catch(error => {\n    ocultableDanger(i18next.t('navbar:errorDesconocido'), i18next.t('navbar:errorAuth'));\n    console.error(error);\n  });\n};\nexport const creaSesion = token => {\n  setLS('token', token);\n  console.log(\"Voy a refrescar la pagina\");\n  window.location.reload(); //recargaPermisos(secciones_permiso);\n};\nexport const cerrarSesion = () => {\n  limpiarLs('token');\n}; //|-------Funciones del token------|//\n\nconst urlBase64Decode = str => {\n  let output = str.replace('-', '+').replace('_', '/');\n\n  switch (output.length % 4) {\n    case 0:\n      break;\n\n    case 2:\n      output += '==';\n      break;\n\n    case 3:\n      output += '=';\n      break;\n\n    default:\n      throw 'Illegal base64url string!';\n  }\n\n  return window.atob(output);\n};\n\nexport const getTId = () => getClaim('tId');\nexport const getUId = () => getClaim('uId');\nexport const getN = () => getClaim('n');\nexport const getU = () => getClaim('u');\nexport const getClaim = claim => getClaims()[claim];\n\nconst getClaims = () => {\n  let token = getLS('token');\n  let claims = {};\n\n  if (typeof token !== 'undefined' && token !== null) {\n    let payload = token.split('.');\n\n    if (typeof payload[1] !== 'undefined' && payload[1] !== null) {\n      claims = JSON.parse(urlBase64Decode(payload[1]));\n    }\n  }\n\n  return claims;\n};\n\nexport const isLogged = () => {\n  let token = getLS('token');\n  return typeof token !== 'undefined' && token !== null;\n};\nexport const getToken = () => {\n  let token = getLS('token');\n  return token;\n};","map":{"version":3,"sources":["/home/frangb/Documentos/xolos/practicas/src/services/authService.js"],"names":["getLS","setLS","limpiarLs","cargando","cerrarAlert","ocultableDanger","API","i18next","attemp","username","password","post","then","res","data","catch","err","response","status","t","loginTrabajador","trabajador_id","password2","error","console","creaSesion","token","log","window","location","reload","cerrarSesion","urlBase64Decode","str","output","replace","length","atob","getTId","getClaim","getUId","getN","getU","claim","getClaims","claims","payload","split","JSON","parse","isLogged","getToken"],"mappings":"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","sourcesContent":["import {getLS, setLS, limpiarLs} from './localstorage';\nimport {cargando, cerrarAlert, ocultableDanger} from \"./swalService\";\nimport API from '../api/axios';\nimport i18next from \"i18next\";\n\nexport const attemp = (username, password) => {\n    cargando();\n    return API.post('iniciarSesion', {username, password})\n        .then((res) => {\n            cerrarAlert();\n            return res.data;\n        }).catch((err) => {\n            cerrarAlert();\n            switch (err.response.status) {\n                case 401:\n                    ocultableDanger(i18next.t('navbar:sinUsuarioAsignado'), i18next.t('navbar:errorAuth'));\n                    break;\n                case 403:\n                    ocultableDanger(i18next.t('navbar:credencialesIncorrectas'), i18next.t('navbar:errorAuth'));\n                    break;\n                case 500:\n                default:\n                    ocultableDanger(i18next.t('navbar:errorDesconocido'), i18next.t('navbar:errorAuth'));\n                    break;\n            }\n            return err.response;\n        });\n};\n\nexport const loginTrabajador = (username, trabajador_id, password2) => {\n    cargando();\n    return API.post('logInTrabajador', {username, trabajador_id, password2})\n        .then(\n            (res) => {\n                cerrarAlert()\n                return res.data;\n            }\n        ).catch((error) => {\n            ocultableDanger(i18next.t('navbar:errorDesconocido'), i18next.t('navbar:errorAuth'));\n            console.error(error);\n        });\n};\n\nexport const creaSesion = (token) => {\n    setLS('token', token);\n    console.log(\"Voy a refrescar la pagina\");\n    window.location.reload();\n    //recargaPermisos(secciones_permiso);\n};\n\nexport const cerrarSesion = () => {\n    limpiarLs('token');\n};\n\n//|-------Funciones del token------|//\nconst urlBase64Decode = (str) => {\n    let output = str.replace('-', '+').replace('_', '/');\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += '==';\n            break;\n        case 3:\n            output += '=';\n            break;\n        default:\n            throw 'Illegal base64url string!';\n    }\n    return window.atob(output);\n};\n\nexport const getTId = () => getClaim('tId');\n\nexport const getUId = () => getClaim('uId');\n\nexport const getN = () => getClaim('n');\n\nexport const getU = () => getClaim('u');\n\nexport const getClaim = (claim) => getClaims()[claim];\n\nconst getClaims = () => {\n    let token = getLS('token');\n    let claims = {};\n    if (typeof token !== 'undefined' && token !== null) {\n        let payload = token.split('.');\n        if (typeof payload[1] !== 'undefined' && payload[1] !== null) {\n            claims = JSON.parse(urlBase64Decode(payload[1]));\n        }\n    }\n    return claims;\n};\n\nexport const isLogged = () => {\n    let token = getLS('token');\n    return typeof token !== 'undefined' && token !== null;\n};\n\nexport const getToken = () => {\n    let token = getLS('token');\n    return token;\n};"]},"metadata":{},"sourceType":"module"}